<document title="ManTools">
<define name="version" value="">
<define name="date" value="" length=30 align="right">




<literal mode="Text">
=============================================================================
ManTools - Application manual creation tools                     Version $$version$$

(C) Stephen Fryatt, 2002-2012                  $$date$$
=============================================================================
</literal>





<chapter title="License" file="License">

<cite>ManTools</cite> are licensed under the EUPL, Version&nbsp;1.1 only (the "Licence"); you may not use this work except in compliance with the Licence.

You may obtain a copy of the Licence at <link ref="#url http://joinup.ec.europa.eu/software/page/eupl">http://joinup.ec.europa.eu/software/page/eupl</link>

Unless required by applicable law or agreed to in writing, software distributed under the Licence is distributed on an &quot;<strong>as is</strong>&quot; basis, <strong>without warranties or conditions of any kind</strong>, either express or implied.

See the Licence for the specific language governing permissions and limitations under the Licence.

The source for <cite>ManTools</cite> can be found alongside this binary download, at <link ref="#url http://www.stevefryatt.org.uk/software">http://www.stevefryatt.org.uk/software</link>

</chapter>





<chapter title="Introduction" file="Introduction">

<cite>ManTools</cite> are a set of Perl scripts intended for generating StrongHelp, HTML, DDF and plain text help files from a single source file.  The intention is to make it easier to supply a both plain text and formatted versions of software manuals.

The manuals for use with <cite>ManTools</cite> are marked up in an HTML or XML like way, using tags enclosed in angle brackets (like &lt;this&gt;).  Unlike HTML, the markup tags have a strong bias towards producing documentation for RISC&nbsp;OS applications. They are also far from rigorous in their structure.

</chapter>





<chapter title="Markup language" file="Markup">

The markup tags used by <cite>ManTools</cite> are similar to HTML, but the whole structure is simplified a bit.  All tags are enclosed in angle brackets (like &lt;this&gt;) and reserved characters are inserted using the standard entities starting with ampersand.

Unlike in HTML, paragraphs are not enclosed in <code>&lt;p&gt; ... &lt;/p&gt;</code> tags.  Instead, each paragraph must be on one line in the file, with one or more newlines at the end. Using a text editor that supports soft-wrap (ie. not <cite>Edit</cite>) will help to make this easier.


<subhead title="General syntax">

<cite>ManTools</cite> defines three distinct types of object in its files: block tags, inline tags and character entities. Tags can be either open or closed. Inline tags and entities are found within paragraphs, which are continuous lines of text separated by one or more newlines.

Block tags must appear on a line of their own, and define something about the structure of the document. Some of them have a closing tag, although this is not universal. Those that are closed apply to one or more whole paragraphs that are located between the tags.

Unlike block tags, inline tags appear within a line of text.  The apply formatting to individual words or characters, as opposed to entire paragraphs. Entities also appear within a line of text, and represent characters that can not easily be included in the markup.

</chapter>




<chapter title="Document Structure" file="Structure">

A source file consists of one or more sections or chapters, which are put together to form a complete manual. How these are interpreted will depend on the format being produced: some conversions (such as plain text) concatenate all of the sections into a single file, while others (such as StrongHelp) put each section into its own file.

Every source file must start with the &lt;document&nbsp;...&gt; tag, which gives details of the manual being created.

<definition target="&lt;document&nbsp;...&gt;">
The <code>&lt;document ...&gt;</code> tag appears at the top of a document, at the block level. It supplies details about that document, and is not closed.

The defined attributes are:

<list>
<li><code>title</code>: the title of the document.  Used to prefix chapter titles in <cite>StrongHelp</cite> title-bars.
</list>
</definition>

The &lt;document&nbsp;...&gt; tag is followed by any variable definitions which are required by the rest of the manual.






<subhead title="Block tags">

Block tags must appear on a line of their own.  Some of them have a closing tag, although this is not universal.  Those that are closed apply to one or more whole paragraphs that are located between the tags.



<definition target="&lt;literal ...&gt; ... &lt;/literal&gt;">
The <code>&lt;literal ...&gt; ... &lt;/literal&gt;</code> tag pair enclose a block of text that will be written to a specific type of output file.  The block is written with no translation apart from the insertion of literals.

The defined attributes are:

<list>
<li><code>mode</code>: the output mode that will output the text.
<li><code>file</code>: the file name if multiple output files are produced.
</list>
</definition>


<definition target="&lt;chapter ...&gt; ... &lt;/chapter&gt;">
The <code>&lt;chapter ...&gt; ... &lt;/chapter&gt;</code> tag pair enclose a block of text that forms a chapter in a document.  Depending upon the type of manual being produced, this will either form a section of text with a main heading above it, or it will be a separate page.

The defined attributes are:

<list>
<li><code>title</code>: the title of the chapter as used in the document.
<li><code>file</code>: the file name or link attribute.  This is used to reference the chapter in the <code>&lt;link ...&gt;</code> tag and will be used as a filename if multiple output files are produced.
</list>
</definition>


<definition target="&lt;subhead ...&gt;">
The <code>&lt;subhead ...&gt;</code> tag appears in a chapter and inserts a sub heading at that point.  It is not closed.

The defined attributes are:

<list>
<li><code>title</code>: the title of the subsection.
</list>
</definition>


<definition target="&lt;list&gt; ... &lt;/list&gt;">
The <code>&lt;list ...&gt; ... &lt;/list&gt;</code> tag pair enclose a bullet-point list.  The paragraphs between the tags are indented as a list and those with <code>&lt;li&gt;</code> at the start are given a bullet point.

The defined attributes are:

<list>
<li><code>type</code>: the type of list.  This can be <code>bullet</code>, <code>num</code>, <code>upper</code> or <code>lower</code>.  The default is bullet.

<li><code>spacing</code>: the line spacing.  This is either <code>0</code> or <code>1</code>; the default is 0.
</list>
</definition>


<definition target="&lt;codeblock&gt; ... &lt;/codeblock&gt;">
The <code>&lt;codeblock ...&gt; ... &lt;/codeblock&gt;</code> tag pair enclose a section of code or literal text.  All lines (including blank ones) are output to the file.  A monospace font and indentation are used if applicable.

The are no defined attributes.
</definition>


<definition target="&lt;box&gt; ... &lt;/box&gt;">
The <code>&lt;box ...&gt; ... &lt;/box&gt;</code> tag pair enclose a section of text that is to be highligted or stand out from the remaining copy (such as a 'box' in a magazine).

The are no defined attributes.
</definition>


<definition target="&lt;definition ...&gt; ... &lt;/definition&gt;">
The <code>&lt;definition ...&gt; ... &lt;/definition&gt;</code> tag pair enclose a definition of a piece of text (the target).  This is equivalent to the <code>&lt;dl&gt;&lt;dt&gt;&lt;dd&gt;</code> structure in HTML.

The defined attributes are:

<list>
<li><code>target</code>: the text being defined by the content of the definition block.
</list>
</definition>


<subhead title="In-line tags">

Unlike block tags, inline tags appear within a line of text.  The apply formatting to individual words or characters, as opposed to entire paragraphs.

<definition target="&lt;link ...&gt; ... &lt;/link&gt;">
The <code>&lt;link ...&gt; ... &lt;/link&gt;</code> tag pair enclose a hyperlink, that will be used in output formats that support these.

The defined attributes are:

<list>
<li><code>ref</code>: the <code>file</code> attribute from a <code>&lt;chapter ...&gt;</code> tag pair elsewhere in the document, defining the location to jump to. Alternatively, the reference can start with a <cite>StrongHelp</cite> format <code>#url </code> (with a trailing space) to indicate that what follows is a URI.
</list>
</definition>

<definition target="Semantic tags">
There are several semantic tags that can be used to apply meaning to pieces of text.  These are:

<list>
<li><code>&lt;cite&gt;</code>: indicates a citation.

<li><code>&lt;code&gt;</code>: identifies an inline block of code.

<li><code>&lt;em&gt;</code>: emphasises the text.

<li><code>&lt;file&gt;</code>: shows a file name or path.

<li><code>&lt;icon&gt;</code>: indicates an icon (button) label.

<li><code>&lt;key&gt;</code>: indicates a key name.

<li><code>&lt;menu&gt;</code>: marks a menu entry.

<li><code>&lt;mouse&gt;</code>: indicates a mouse button.

<li><code>&lt;strong&gt;</code>: strongly emphasises the text.

<li><code>&lt;window&gt;</code>: marks a window title.
</list>
</definition>

</chapter>













<literal mode="Text">


Updates and Contacting Me
-------------------------

  If you have any comments about ManTools, or would like to report any bugs
  that you find, you can email me at the address below.

  Updates to ManTools and more programs for RISC OS computers can be found
  on my website at http://www.stevefryatt.org.uk/software/

  Stephen Fryatt
  email: steve@stevefryatt.org.uk
</literal>

